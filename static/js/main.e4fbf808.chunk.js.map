{"version":3,"sources":["Filter/styled.js","Filter/Filter.js","Contact/styled.js","Contact/Contact.js","ContactList/styled.js","ContactList/ContactList.js","ContactForm/styled.js","ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Input","input","Filter","value","onFilter","type","name","autoComplete","onChange","Li","li","Button","button","Contact","contact","onDelete","number","onClick","Ul","ul","ContactList","contacts","map","id","Form","form","ContactForm","state","handleChange","e","target","setState","handleSubmit","preventDefault","props","onSubmit","this","pattern","title","required","Component","App","filter","findContact","array","some","oldContact","toLowerCase","addContact","uuidv4","alert","removeContact","idToCompare","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","snapshot","setItem","stringify","normalizedFilter","filteredContacts","includes","style","marginLeft","marginTop","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4fbf808.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 30px 30px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 6px 8px;\r\n  border-radius: 7%;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border-color: #03a9f4;\r\n  }\r\n`;\r\n\r\nexport { Label, Input };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, Input } from \"./styled\";\r\n\r\nconst Filter = ({ value, onFilter }) => (\r\n  <Label>\r\n    {\" \"}\r\n    Find contacts by name\r\n    <Input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      autoComplete=\"off\"\r\n      onChange={onFilter}\r\n    />\r\n  </Label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nconst Li = styled.li`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 10px 10px;\r\n  border-radius: 4%;\r\n  width: calc(100% / 3);\r\n  font-size: 16px;\r\n\r\n  box-shadow: 4px 5px 7px #2174f396;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border-radius: 50%;\r\n  border-color: #fff;\r\n  background: transparent;\r\n  box-shadow: 2px 1px 8px 1px rgb(25 75 211 / 43%);\r\n  color: #03a9f4;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 2px 1px 8px 1px #f44336;\r\n  }\r\n`;\r\n\r\nexport { Li, Button };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Li, Button } from \"./styled\";\r\n\r\nconst Contact = ({ contact, onDelete }) => {\r\n  const { name, number } = contact;\r\n  return (\r\n    <Li>\r\n      {name}: {number}\r\n      <Button type=\"button\" onClick={onDelete}>\r\n        X\r\n      </Button>\r\n    </Li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Contact;\r\n","import styled from \"styled-components\";\r\n\r\nconst Ul = styled.ul`\r\n  margin: 0;\r\n  padding: 0 30px;\r\n  list-style: none;\r\n`;\r\n\r\nexport { Ul };\r\n","import React from \"react\";\r\nimport Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Ul } from \"./styled\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <Ul>\r\n      {contacts.map((contact) => {\r\n        const { id } = contact;\r\n        return (\r\n          <Contact key={id} contact={contact} onDelete={() => onDelete(id)} />\r\n        );\r\n      })}\r\n    </Ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  padding: 6px 8px;\r\n  border-radius: 7%;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border: 2px solid #03a9f4;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  padding: 30px 30px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #03a9f4;\r\n  border-radius: 10%;\r\n  outline: none;\r\n  color: white;\r\n  padding: 6px 10px;\r\n  border-color: #6f97a8;\r\n  transition: transform 300ms linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.25);\r\n  }\r\n\r\n  &:active {\r\n    color: #03a9f4;\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nexport { Input, Label, Form, Button };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input, Label, Form, Button } from \"./styled\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n\r\n    this.setState(() => ({\r\n      [name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.setState(() => ({\r\n      name: \"\",\r\n      number: \"\",\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            autoComplete=\"off\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Phone number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            autoComplete=\"off\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactList\";\nimport ContactForm from \"./ContactForm\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState(() => ({ contacts: parsedContacts }));\n    }\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleChange = (e) => {\n    const name = e.target.name;\n\n    this.setState(() => ({\n      [name]: e.target.value,\n    }));\n  };\n\n  findContact = (array, name) => {\n    return array.some(\n      (oldContact) => oldContact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const existContact = this.findContact(this.state.contacts, contact.name);\n\n    existContact\n      ? alert(`${contact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n  };\n\n  removeContact = (idToCompare) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== idToCompare),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <>\n        <h1 style={{ marginLeft: 30, marginTop: 0, marginBottom: 0 }}>\n          Phonebook\n        </h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 style={{ marginLeft: 30, marginTop: 0, marginBottom: 0 }}>\n          Contacts\n        </h2>\n        <Filter value={filter} onFilter={this.handleChange} />\n        <ContactList\n          contacts={filteredContacts}\n          onDelete={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}